{"version":3,"sources":["componets/Header.js","context/AppReducer.js","context/GlobalState.js","componets/Balance.js","componets/IncomeExpenses.js","componets/Transaction.js","componets/TransactionList.js","componets/AddTransaction.js","App.js","index.js"],"names":["Header","a","state","action","console","log","type","transactions","filter","transaction","id","payload","items","localStorage","getItem","JSON","parse","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","useContext","amounts","map","amount","total","reduce","acc","item","toFixed","IncomeExpenses","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","setItem","stringify","index","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","undefined","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9f2be74.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Hisab Kitab\r\n            (Expense Tracker) \r\n            by Kumar Sumit\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport {Header};\r\n\r\n","const a = (state, action) => {\r\n    console.log(state);\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            if (state.transaction == null) {\r\n                return {\r\n                    ...state,\r\n                    transactions: [action.payload].filter(transaction => transaction.id !== action.payload)\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions].filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default a;","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n//Initial State\r\nlet items = [];\r\nif (!localStorage.getItem('dailyExpense')) {\r\n    items = JSON.parse(localStorage.getItem('dailyExpense'));\r\n}\r\nconst initialState = {\r\n    transactions: items\r\n}\r\n\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    //Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n\r\n    }\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n\r\n    }\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>\r\n\r\n    )\r\n\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions ? transactions.map(transaction => transaction.amount) : [];\r\n\r\n    const total = amounts ? amounts.reduce((acc, item) => (acc += item), 0).toFixed(2) : 0;\r\n    return (\r\n        <div>\r\n            <h4>Your Balance</h4>\r\n            <h1>Rs {total}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions?.map(transaction => transaction.amount);\r\n  const income = amounts\r\n    ?.filter(item => item > 0)\r\n    ?.reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts ? amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * (-1) : 0).toFixed(2);\r\n\r\n  return (\r\n\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">Rs {income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">Rs {expense}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n    const sign = transaction.amount<0?'-':'+';\r\n    return (\r\n        <li className={transaction.amount<0?'minus':'plus'}>\r\n           {transaction.text} <span>{sign}Rs {Math.abs(transaction.amount)}</span>\r\n           <button onClick={()=>deleteTransaction(transaction.id)}\r\n           \r\n           className=\"delete-btn\">x</button>\r\n       </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  localStorage.setItem('dailyExpense', JSON.stringify(transactions));\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions?.map((transaction, index) => (<Transaction key={index} transaction={transaction} />))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState,useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n   \r\n    const[text, setText] = useState('');\r\n    const[amount, setAmount] = useState(0);\r\n    const {addTransaction} = useContext(GlobalContext);   \r\n    const onSubmit =(e)=>{\r\n     e.preventDefault();\r\n     const newTransaction={\r\n         id: Math.floor(Math.random() * 100000000),\r\n         text,\r\n         amount: +amount\r\n     }\r\n     if(text === undefined || text === '' || amount === 0) {\r\n      return ;    \r\n     }\r\n\r\n     addTransaction(newTransaction);\r\n     setText('');\r\n     setAmount(0);\r\n     \r\n    }  \r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e)=>setText(e.target.value)}\r\n                     placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e)=>setAmount(e.target.value)}\r\n                     placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","\nimport './App.css';\nimport {Header} from './componets/Header';\nimport {Balance} from './componets/Balance';\nimport {IncomeExpenses} from './componets/IncomeExpenses';\nimport {TransactionList} from './componets/TransactionList';\nimport {AddTransaction} from './componets/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App(){\n  return(\n    <GlobalProvider>\n      <Header/>\n       <div className=\"container\">\n         <Balance />\n         <IncomeExpenses/>\n         <TransactionList/>\n         <AddTransaction/>\n\n       </div>\n    </GlobalProvider>\n\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}